variables:
  OUTPUT_DIR: "*/build"
  GRADLE_USER_HOME: .gradle-user-home
  GRADLE_OPTS: -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false
  GRADLE_CLI_OPTS: --no-daemon --console=plain

.gradle:
  image: gradle:6.8-jdk8
  cache:
    key: gradle-global-cache
    paths:
      - $GRADLE_USER_HOME/caches

compile:
  extends: .gradle
  stage: build
  artifacts:
    paths:
      - $OUTPUT_DIR
  script:
    - gradle $GRADLE_CLI_OPTS assemble

unit_test:
  extends: .gradle
  stage: test
  dependencies:
    - compile
  artifacts:
    paths:
      - $OUTPUT_DIR/jacoco
      - $OUTPUT_DIR/reports
      - $OUTPUT_DIR/test-results
    reports:
      junit: $OUTPUT_DIR/test-results/test/TEST-*.xml
  coverage: '/Code coverage: \d+\.\d+/'
  script:
    - gradle $GRADLE_CLI_OPTS test jacocoTestReport -x compileJava -x classes -x jar
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print "Instructions covered:", covered, "/", instructions; print "Code coverage:", 100 * covered / instructions "%" }' $OUTPUT_DIR/reports/jacoco/test/jacocoTestReport.csv

maven_publish:
  extends: .gradle
  stage: deploy
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    # Automatically publish snapshot packages for the master branch
    - if: $CI_COMMIT_REF_NAME == "master"
      when: on_success
    # Publish packages for releases on-demand
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+/ || $CI_COMMIT_REF_NAME =~ /^[0-9]+\.[0-9]+$/
      when: manual
    # Do not publish packages for topic branches
    - when: never
  dependencies:
    - compile
  script:
    - gradle $GRADLE_CLI_OPTS publish -x jar -x war -PgitlabHostUrl=$CI_SERVER_URL -PgitlabProjectId=$CI_PROJECT_ID -PgitlabAuthToken=$CI_JOB_TOKEN

.docker_image:
  extends: .gradle
  stage: deploy
  variables:
    DOCKER_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH
    DOCKER_TAG: $CI_COMMIT_REF_SLUG
  dependencies:
    - compile
  allow_failure: true
  script:
    - "echo Creation time for image: `git log -1 --format=%cI`"
    - "echo Tag for image: $DOCKER_TAG"
    - 'if [ -n "$DOCKER_ADDITIONAL_TAGS" ]; then echo "Additional tags: $DOCKER_ADDITIONAL_TAGS"; fi'
    - gradle $GRADLE_CLI_OPTS jib -x classes -x jar -x war
      -Djib.to.auth.username="$CI_REGISTRY_USER"
      -Djib.to.auth.password="$CI_REGISTRY_PASSWORD"
      -Djib.to.image="$DOCKER_IMAGE:$DOCKER_TAG"
      -Djib.container.creationTime="`git log -1 --format=%cI`"
      $GRADLE_JIB_OPTS

docker_image:
  extends: .docker_image
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    # Automatically build images for the master branch
    - if: $CI_COMMIT_REF_NAME == "master"
      when: on_success
    # Exclude refs conflicting with Docker tags for releases
    - if: $CI_COMMIT_REF_NAME == "latest" || $CI_COMMIT_REF_NAME =~ /^v[0-9]+/ || $CI_COMMIT_REF_NAME =~ /^[0-9]+\.[0-9]+$/
      when: never
    # Build topic branch images on-demand
    - when: manual
  before_script:
    - DOCKER_ADDITIONAL_TAGS=
    - GRADLE_JIB_OPTS=

docker_image_release:
  extends: .docker_image
  only:
    - /^v[0-9]+(\.[0-9]+){2}$/
  except:
    - branches
  when: manual
  before_script:
    - VERSION=`echo $CI_COMMIT_REF_NAME | cut -c2-`
    - V_MINOR=`echo $VERSION | cut -d . -f 1,2`
    - V_MAJOR=`echo $V_MINOR | cut -d . -f 1`
    - DOCKER_TAG=$VERSION
    - DOCKER_ADDITIONAL_TAGS=
    - if [ -n "$TAG_MINOR" ]; then DOCKER_ADDITIONAL_TAGS=$DOCKER_ADDITIONAL_TAGS,$V_MINOR; fi
    - if [ -n "$TAG_MAJOR" ]; then DOCKER_ADDITIONAL_TAGS=$DOCKER_ADDITIONAL_TAGS,$V_MAJOR; fi
    - if [ -n "$TAG_LATEST" ]; then DOCKER_ADDITIONAL_TAGS=$DOCKER_ADDITIONAL_TAGS,latest; fi
    - DOCKER_ADDITIONAL_TAGS=`echo $DOCKER_ADDITIONAL_TAGS | cut -c2-`
    - if [ -n "$DOCKER_ADDITIONAL_TAGS" ]; then GRADLE_JIB_OPTS=-Djib.to.tags=$DOCKER_ADDITIONAL_TAGS; fi
